name: Build Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DEBIAN_FRONTEND: noninteractive
  BUILDODER_DIR: /home/runner/work/${{ github.repository }}/${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
    # 第一阶段：环境准备
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        cache: 'pip'

    # 第二阶段：依赖安装（严格顺序）
    - name: Add swap space (6GB)
      run: |
        sudo fallocate -l 6G /swapfile
        sudo chmod 600 /swapfile
        sudo mkswap /swapfile
        sudo swapon /swapfile
        free -h

    - name: Install system dependencies
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y --no-install-recommends \
          software-properties-common \
          build-essential \
          git zip unzip \
          openjdk-17-jdk \
          python3-pip python3-dev \
          autoconf libtool pkg-config \
          zlib1g-dev libncurses-dev \
          cmake libffi-dev libssl-dev \
          libtinfo6

    - name: Install Buildozer and dependencies
      run: |
        python -m pip install --upgrade pip wheel
        pip install --no-cache-dir \
          buildozer==1.5.0 \
          cython==0.29.33 \
          virtualenv

    # 第三阶段：项目初始化
    - name: Initialize Buildozer
      run: |
        # 确保存在基础配置
        if [ ! -f buildozer.spec ]; then
          echo -e "[app]\nsource.dir = .\nsource.main = main.py\n\n[buildozer]\nlog_level = 2" > buildozer.spec
        fi
        
        # 追加必要配置（不覆盖现有）
        grep -q "android.archs" buildozer.spec || echo "android.archs = arm64-v8a" >> buildozer.spec
        grep -q "android.api" buildozer.spec || echo "android.api = 34" >> buildozer.spec
        
        # 验证配置
        buildozer check || (cat buildozer.spec && exit 1)

    # 第四阶段：构建过程
    - name: Prepare build environment
      run: |
        mkdir -p $BUILDODER_DIR/.buildozer/android/platform
        echo "buildozer_dir = $BUILDODER_DIR/.buildozer" >> buildozer.spec

    - name: Build APK (with retry)
      run: |
        for i in {1..3}; do
          buildozer -v android clean && \
          buildozer -v android debug 2>&1 | tee build.log && \
          grep -q "BUILD SUCCESSFUL" build.log && break
          
          echo "Build attempt $i failed, retrying..."
          sleep 10
        done
        
        # 最终验证
        [ -f bin/*.apk ] || (cat build.log && exit 1)

    # 第五阶段：结果处理
    - name: Prepare artifacts
      run: |
        mkdir -p artifacts
        cp bin/*.apk artifacts/
        ls -lh artifacts/

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: comic-reader-apk
        path: artifacts/*.apk
        retention-days: 7
        if-no-files-found: error
